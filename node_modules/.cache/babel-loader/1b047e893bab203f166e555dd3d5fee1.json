{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\pacifico\\\\front\\\\src\\\\componentes\\\\Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Menu from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [region, SetRegion] = useState({});\n  useEffect(() => {\n    async function loadRegion() {\n      const response = await Menu();\n\n      if (response.status === 200) {\n        SetRegion(response.data.objeto);\n      }\n    }\n\n    loadRegion();\n  }, []);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this) : 'Mostrar listado';\n};\n\n_s(List, \"BEXKT/2gbU24Cw+3kuQi57NafXc=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/nicol/Desktop/pacifico/front/src/componentes/Menu.js"],"names":["React","useState","useEffect","axios","Menu","List","isLoading","setIsLoading","region","SetRegion","loadRegion","response","status","data","objeto"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,EAAjB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AAEDC,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeQ,UAAf,GAA6B;AAC7B,YAAMC,QAAQ,GAAG,MAAMP,IAAI,EAA3B;;AACA,UAAIO,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AACxBH,QAAAA,SAAS,CAACE,QAAQ,CAACE,IAAT,CAAcC,MAAf,CAAT;AACH;AACA;;AACFJ,IAAAA,UAAU;AACZ,GARQ,EAQN,EARM,CAAT;AASC,SACIJ,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADQ,GAER,iBAHL;AAMH,CAnBD;;GAAMD,I;;KAAAA,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React , {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Menu from ''\r\n\r\n\r\nconst List = () => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [region,SetRegion] = useState({})\r\n   \r\n   useEffect( () => {\r\n       async function loadRegion () {\r\n       const response = await Menu()\r\n       if (response.status === 200){\r\n           SetRegion(response.data.objeto)\r\n       }\r\n       }\r\n      loadRegion()\r\n   }, [])\r\n    return (\r\n        isLoading\r\n        ?<Loading/>\r\n        :'Mostrar listado'\r\n        \r\n    )\r\n}\r\nexport default List;"]},"metadata":{},"sourceType":"module"}